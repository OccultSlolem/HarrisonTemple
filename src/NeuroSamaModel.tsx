/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.15 ./vtuber_neuro-sama.glb --types 
Author: Taprieiko (https://sketchfab.com/Taprieiko)
License: CC-BY-NC-4.0 (http://creativecommons.org/licenses/by-nc/4.0/)
Source: https://sketchfab.com/3d-models/vtuber-neuro-sama-34d1940b2bc44898b938448305765b61
Title: Vtuber: Neuro-sama
*/

import * as THREE from 'three'
import React, { createRef, useEffect, useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { useFrame } from '@react-three/fiber'

type GLTFResult = GLTF & {
  nodes: {
    Object_344: THREE.SkinnedMesh
    Object_345: THREE.SkinnedMesh
    Object_346: THREE.SkinnedMesh
    Object_347: THREE.SkinnedMesh
    Object_348: THREE.SkinnedMesh
    Object_349: THREE.SkinnedMesh
    Object_350: THREE.SkinnedMesh
    Object_351: THREE.SkinnedMesh
    Object_352: THREE.SkinnedMesh
    Object_353: THREE.SkinnedMesh
    Object_336: THREE.SkinnedMesh
    Object_337: THREE.SkinnedMesh
    Object_339: THREE.SkinnedMesh
    Object_340: THREE.SkinnedMesh
    Object_342: THREE.SkinnedMesh
    Object_355: THREE.SkinnedMesh
    Object_357: THREE.SkinnedMesh
    Object_359: THREE.SkinnedMesh
    Object_360: THREE.SkinnedMesh
    Object_362: THREE.SkinnedMesh
    Object_364: THREE.SkinnedMesh
    Object_366: THREE.SkinnedMesh
    Object_368: THREE.SkinnedMesh
    Object_370: THREE.SkinnedMesh
    Object_372: THREE.SkinnedMesh
    Object_374: THREE.SkinnedMesh
    Object_394: THREE.SkinnedMesh
    _rootJoint: THREE.Bone
    _rootJoint_1: THREE.Bone
  }
  materials: {
    Face: THREE.MeshBasicMaterial
    Face_Mouth: THREE.MeshBasicMaterial
    Eyes: THREE.MeshBasicMaterial
    Face_Eyelash: THREE.MeshBasicMaterial
    body: THREE.MeshBasicMaterial
    ['Eyes_-_Star']: THREE.MeshBasicMaterial
    ['Eyes_-_Heart']: THREE.MeshBasicMaterial
    ['Eyes_-_DZ']: THREE.MeshBasicMaterial
    ['Eyes_-_Blank']: THREE.MeshBasicMaterial
    Emotes: THREE.MeshBasicMaterial
    Hair: THREE.MeshBasicMaterial
    Hair_Ft: THREE.MeshBasicMaterial
    body_c: THREE.MeshBasicMaterial
    Clot2: THREE.MeshBasicMaterial
    Accesories: THREE.MeshBasicMaterial
    Clot1: THREE.MeshBasicMaterial
    ['Clot2_-_shoes']: THREE.MeshBasicMaterial
    ['Outline_-_Black']: THREE.MeshBasicMaterial
    ['Outline_-_Black']: THREE.MeshBasicMaterial
    ['Outline_-_Hair']: THREE.MeshBasicMaterial
    ['Outline_-_Skin']: THREE.MeshBasicMaterial
    Swarm: THREE.MeshBasicMaterial
  }
}

type ActionName = 'Scene'
type GLTFActions = Record<ActionName, THREE.AnimationAction>

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['skinnedMesh'] | JSX.IntrinsicElements['bone']>>

export function Nwero(props: JSX.IntrinsicElements['group']) {
  const group = createRef<THREE.Group>()
  const { nodes, materials, animations } = useGLTF('/vtuber_neuro-sama.glb') as GLTFResult


  useEffect(() => {
    if (!group.current) return;
    group.current.traverse((child) => {
      if (child instanceof THREE.Mesh) {
        child.frustumCulled = false;
      }
    });
  }, [group]);

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
          <group name="Neuro_and_stuff_Dfbx" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
            <group name="Object_2">
              <group name="RootNode">
                <group name="Sun002" position={[-1282.297, 11252.956, 13496.243]} rotation={[1.735, 1.249, -0.532]} scale={988.896}>
                  <group name="Object_5" rotation={[Math.PI / 2, 0, 0]}>
                    <group name="Object_6" />
                  </group>
                </group>
                <group name="Spot002" position={[3319.829, 7705.831, 17312.965]} rotation={[-2.202, -1.243, 2.966]} scale={[3520.484, 3520.483, 3520.483]}>
                  <group name="Object_8" rotation={[Math.PI / 2, 0, 0]}>
                    <group name="Object_9" />
                  </group>
                </group>
                <group name="metarig" rotation={[-Math.PI / 2, 0, 0]} scale={100}>
                  <group name="Object_11">
                    <primitive object={nodes._rootJoint} />
                    <group name="Object_335" rotation={[-Math.PI / 2, 0, 0]} scale={100} />
                    <group name="Object_338" rotation={[-Math.PI / 2, 0, 0]} scale={100} />
                    <group name="Object_341" rotation={[-Math.PI / 2, 0, 0]} scale={100} />
                    <group name="Object_343" rotation={[-Math.PI / 2, 0, 0]} scale={100} />
                    <group name="Object_354" rotation={[-Math.PI / 2, 0, 0]} scale={100} />
                    <group name="Object_356" rotation={[-Math.PI / 2, 0, 0]} scale={100} />
                    <group name="Object_358" rotation={[-Math.PI / 2, 0, 0]} scale={100} />
                    <group name="Object_361" rotation={[-Math.PI / 2, 0, 0]} scale={100} />
                    <group name="Object_363" rotation={[-Math.PI / 2, 0, 0]} scale={100} />
                    <group name="Object_365" rotation={[-Math.PI / 2, 0, 0]} scale={100} />
                    <group name="Object_367" rotation={[-Math.PI / 2, 0, 0]} scale={100} />
                    <group name="Object_369" rotation={[-Math.PI / 2, 0, 0]} scale={100} />
                    <group name="Object_371" rotation={[-Math.PI / 2, 0, 0]} scale={100} />
                    <group name="Object_373" rotation={[-Math.PI / 2, 0, 0]} scale={100} />
                    <skinnedMesh name="Object_344" geometry={nodes.Object_344.geometry} material={materials.Face} skeleton={nodes.Object_344.skeleton} />
                    <skinnedMesh name="Object_345" geometry={nodes.Object_345.geometry} material={materials.Face_Mouth} skeleton={nodes.Object_345.skeleton} />
                    <skinnedMesh name="Object_346" geometry={nodes.Object_346.geometry} material={materials.Eyes} skeleton={nodes.Object_346.skeleton} />
                    <skinnedMesh name="Object_347" geometry={nodes.Object_347.geometry} material={materials.Face_Eyelash} skeleton={nodes.Object_347.skeleton} />
                    <skinnedMesh name="Object_348" geometry={nodes.Object_348.geometry} material={materials.body} skeleton={nodes.Object_348.skeleton} />
                    <skinnedMesh name="Object_349" geometry={nodes.Object_349.geometry} material={materials['Eyes_-_Star']} skeleton={nodes.Object_349.skeleton} />
                    <skinnedMesh name="Object_350" geometry={nodes.Object_350.geometry} material={materials['Eyes_-_Heart']} skeleton={nodes.Object_350.skeleton} />
                    <skinnedMesh name="Object_351" geometry={nodes.Object_351.geometry} material={materials['Eyes_-_DZ']} skeleton={nodes.Object_351.skeleton} />
                    <skinnedMesh name="Object_352" geometry={nodes.Object_352.geometry} material={materials['Eyes_-_Blank']} skeleton={nodes.Object_352.skeleton} />
                    <skinnedMesh name="Object_353" geometry={nodes.Object_353.geometry} material={materials.Emotes} skeleton={nodes.Object_353.skeleton} />
                    <skinnedMesh name="Object_336" geometry={nodes.Object_336.geometry} material={materials.Hair} skeleton={nodes.Object_336.skeleton} />
                    <skinnedMesh name="Object_337" geometry={nodes.Object_337.geometry} material={materials.Hair_Ft} skeleton={nodes.Object_337.skeleton} />
                    <skinnedMesh name="Object_339" geometry={nodes.Object_339.geometry} material={materials.body} skeleton={nodes.Object_339.skeleton} />
                    <skinnedMesh name="Object_340" geometry={nodes.Object_340.geometry} material={materials.body_c} skeleton={nodes.Object_340.skeleton} />
                    <skinnedMesh name="Object_342" geometry={nodes.Object_342.geometry} material={materials.Clot2} skeleton={nodes.Object_342.skeleton} />
                    <skinnedMesh name="Object_355" geometry={nodes.Object_355.geometry} material={materials.Accesories} skeleton={nodes.Object_355.skeleton} />
                    <skinnedMesh name="Object_357" geometry={nodes.Object_357.geometry} material={materials.Clot1} skeleton={nodes.Object_357.skeleton} />
                    <skinnedMesh name="Object_359" geometry={nodes.Object_359.geometry} material={materials.Clot2} skeleton={nodes.Object_359.skeleton} />
                    <skinnedMesh name="Object_360" geometry={nodes.Object_360.geometry} material={materials['Clot2_-_shoes']} skeleton={nodes.Object_360.skeleton} />
                    <skinnedMesh name="Object_362" geometry={nodes.Object_362.geometry} material={materials['Outline_-_Black']} skeleton={nodes.Object_362.skeleton} />
                    <skinnedMesh name="Object_364" geometry={nodes.Object_364.geometry} material={materials['Outline_-_Black']} skeleton={nodes.Object_364.skeleton} />
                    <skinnedMesh name="Object_366" geometry={nodes.Object_366.geometry} material={materials['Outline_-_Black']} skeleton={nodes.Object_366.skeleton} />
                    <skinnedMesh name="Object_368" geometry={nodes.Object_368.geometry} material={materials['Outline_-_Hair']} skeleton={nodes.Object_368.skeleton} />
                    <skinnedMesh name="Object_370" geometry={nodes.Object_370.geometry} material={materials['Outline_-_Skin']} skeleton={nodes.Object_370.skeleton} />
                    <skinnedMesh name="Object_372" geometry={nodes.Object_372.geometry} material={materials['Outline_-_Skin']} skeleton={nodes.Object_372.skeleton} />
                    <skinnedMesh name="Object_374" geometry={nodes.Object_374.geometry} material={materials['Outline_-_Black']} skeleton={nodes.Object_374.skeleton} />
                  </group>
                </group>
                <group name="#Neuro_Hair" rotation={[-Math.PI / 2, 0, 0]} scale={100} />
                <group name="#Body" rotation={[-Math.PI / 2, 0, 0]} scale={100} />
                <group name="#Skirt" rotation={[-Math.PI / 2, 0, 0]} scale={100} />
                <group name="#Neuro_Face" rotation={[-Math.PI / 2, 0, 0]} scale={100} />
                <group name="#Pins_&_Stuff" rotation={[-Math.PI / 2, 0, 0]} scale={100} />
                <group name="#Top_Clo" rotation={[-Math.PI / 2, 0, 0]} scale={100} />
                <group name="#Bottom_Clo" rotation={[-Math.PI / 2, 0, 0]} scale={100} />
                <group name="$Top_Clo_-_OL" rotation={[-Math.PI / 2, 0, 0]} scale={100} />
                <group name="$Skirt_-_OL" rotation={[-Math.PI / 2, 0, 0]} scale={100} />
                <group name="$Pins_&_Stuff_-_OL" rotation={[-Math.PI / 2, 0, 0]} scale={100} />
                <group name="$Neuro_Hair_-_OL" rotation={[-Math.PI / 2, 0, 0]} scale={100} />
                <group name="$Neuro_Face_-_OL" rotation={[-Math.PI / 2, 0, 0]} scale={100} />
                <group name="$Body_-_OL" rotation={[-Math.PI / 2, 0, 0]} scale={100} />
                <group name="$Bottom_Clo_-_OL" rotation={[-Math.PI / 2, 0, 0]} scale={100} />
                <group name="Swarm" position={[0, -256.771, 0]} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
                <group name="Swarm_Arm" rotation={[-Math.PI / 2, 0, 0]} scale={100}>
                  <group name="Object_391">
                    <primitive object={nodes._rootJoint_1} />
                    <group name="Object_393" position={[0, -256.771, 0]} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
                    <skinnedMesh name="Object_394" geometry={nodes.Object_394.geometry} material={materials.Swarm} skeleton={nodes.Object_394.skeleton} />
                  </group>
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/vtuber_neuro-sama.glb')
